pipeline {
    agent any
    stages {
        stage('SCM') {
            steps {
                echo 'First stage'
                git branch: 'dev-northamerica', url: 'https://github.com/bobbybabu007/simple-java-maven-app.git'
            }
        }
        stage('Unit Tests') {
            steps {
                sh 'mvn -B -DskipTests clean test'
            }
        }
        stage('Sonarqube Scans') {
            steps {
                echo 'sonar-scanner ....'                
            }
        }
        stage('Package') {
            environment {
                TEST_SERVER_URL = '4.209.33.14'
            }
            steps {
            //    withCredentials([usernameColonPassword(credentialsId: 'test-server-creds', variable: 'TEAM1_TEST_SERVER_CREDS')]) 
            //    {
                    sh 'mvn clean install' 
                    // sh 'ssh $TEST_SERVER_URL'
            //    }
            }
        }
        stage('Create Container image') {
            steps {
                echo 'creating container image' 
                sh 'docker --help'
            }
        }        
        stage('Deploy to Dev Environment') {
            environment {
                IMAGE_ID = 'app1:dev-na'
            }
            steps {
                echo 'deploying $IMAGE_ID to Dev cluster' 
            }
        }        
    }
    post {
        always {
            echo 'pipeline trigger notification on slack'
        }
        success {
            echo 'build is successful email sent to team inbox'
        }
        failure {
            echo 'Email sent to $DEVELOPER notifying of build failure'
        }
    }
}
